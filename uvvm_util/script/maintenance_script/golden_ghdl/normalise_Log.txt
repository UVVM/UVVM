UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.(uvvm)                  Verifying normalise
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise for slv
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Sub-program normalise is outdated and has been replaced by another sub-program.
UVVM:                                                                           Use normalize_and_check().
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for slv x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for slv x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 21. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 21. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for slv x"15"'. 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #1  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=15, v_slv8=00) => v_slv5_a is narrower than v_slv8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #2  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=15, v_slv8=15) => v_slv5_a is narrower than v_slv8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #3  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv8=15, v_slv5_a=15) => v_slv8 is wider than v_slv5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #4  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv8=15, v_slv5_a=15) => v_slv8 is wider than v_slv5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #5  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=55, v_slv8=15) => v_slv5_a is wider than v_slv8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #6  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=55, v_slv8=15) => v_slv5_a is wider than v_slv8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #7  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=, v_slv8=15) => Value length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #8  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(slv: v_slv5_a=55, v_slv8=) => Target length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise for unsigned
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for unsigned x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for unsigned x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 21. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 21. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for unsigned x"15"'. 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #9  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=15, v_uns8=00) => v_uns5_a is narrower than v_uns8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #10  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=15, v_uns8=15) => v_uns5_a is narrower than v_uns8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #11  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns8=15, v_uns5_a=15) => v_uns8 is wider than v_uns5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #12  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns8=15, v_uns5_a=15) => v_uns8 is wider than v_uns5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #13  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=55, v_uns8=15) => v_uns5_a is wider than v_uns8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #14  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=55, v_uns8=15) => v_uns5_a is wider than v_uns8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #15  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=, v_uns8=15) => Value length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #16  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(unsigned: v_uns5_a=55, v_uns8=) => Target length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise for signed
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"F5"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"F5"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"15"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"0A"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for signed x"0A"'. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int -11. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int -11. 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #17  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=10101, v_sig8=00000000) => v_sig5_a is narrower than v_sig8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #18  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=10101, v_sig8=11110101) => v_sig5_a is narrower than v_sig8 without using ALLOW_NARROWER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #19  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig8=11110101, v_sig5_a=10101) => v_sig8 is wider than v_sig5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #20  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig8=11110101, v_sig5_a=10101) => v_sig8 is wider than v_sig5_a without using ALLOW_WIDER mode. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #21  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=01010101, v_sig8=10101) => v_sig5_a is wider than v_sig8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #22  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=01010101, v_sig8=10101) => v_sig5_a is wider than v_sig8 and has non-zeros in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #23  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=10110101, v_sig8=10101) => v_sig5_a is wider than v_sig8 and has non-sign bits in the extended MSB. 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #24  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=, v_sig8=10101) => Value length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #25  ***
UVVM:             0 ns   bfm_common
UVVM:                    normalise(signed: v_sig5_a=10110101, v_sig8=) => Target length is zero! 
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise and check_value for t_slv_array
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_slv_array x"0A"' (exp: x"A"'). 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_slv_array x"06"' (exp: x"6"'). 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_slv_array x"09"' (exp: x"9"'). 
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise and check_value for t_signed_array
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 9. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 6. 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for int 10. 
UVVM: 
UVVM: ID_SEQUENCER                       0.0 ns  TB seq.                        Check normalise and check_value for t_unsigned_array
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_unsigned_array x"0A"' (exp: x"A"'). 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_unsigned_array x"06"' (exp: x"6"'). 
UVVM: ID_POS_ACK                         0.0 ns  TB seq.(uvvm)                  check_value() => OK, for t_unsigned_array x"09"' (exp: x"9"'). 
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** FINAL SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      0         0         0         ok
UVVM:                TB_NOTE      :      0         0         0         ok
UVVM:                WARNING      :      0         0         0         ok
UVVM:                TB_WARNING   :      0         0         0         ok
UVVM:                MANUAL_CHECK :      0         0         0         ok
UVVM:                ERROR        :      0         0         0         ok
UVVM:                TB_ERROR     :     25        25         0         ok
UVVM:                FAILURE      :      0         0         0         ok
UVVM:                TB_FAILURE   :      0         0         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      >> Simulation SUCCESS: No mismatch between counted and expected serious alerts
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                      1000.0 ns  TB seq.(uvvm)                  SIMULATION COMPLETED
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
