UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Sub-program randomise is outdated and has been replaced by another sub-program.
UVVM:                                                                           Use randomize().
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Setting global seeds to 12, 14
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Setting global seeds to 14, 12
UVVM:      
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      ***  REPORT OF GLOBAL CTRL ***
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:                                IGNORE    STOP_LIMIT
UVVM:                NOTE         :  REGARD         0
UVVM:                TB_NOTE      :  REGARD         0
UVVM:                WARNING      :  REGARD         0
UVVM:                TB_WARNING   :  REGARD         0
UVVM:                MANUAL_CHECK :  REGARD         0
UVVM:                ERROR        :  REGARD         1
UVVM:                TB_ERROR     :  REGARD         1
UVVM:                FAILURE      :  REGARD         1
UVVM:                TB_FAILURE   :  REGARD         1
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      
UVVM:      
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      ***  REPORT OF MSG ID PANEL ***
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:                ID                             Status
UVVM:                ------------------------       ------
UVVM:                ID_UTIL_BURIED               : DISABLED
UVVM:                ID_BITVIS_DEBUG              : DISABLED
UVVM:                ID_UTIL_SETUP                : ENABLED
UVVM:                ID_LOG_MSG_CTRL              : ENABLED
UVVM:                ID_ALERT_CTRL                : ENABLED
UVVM:                ID_FINISH_OR_STOP            : ENABLED
UVVM:                ID_CLOCK_GEN                 : ENABLED
UVVM:                ID_GEN_PULSE                 : ENABLED
UVVM:                ID_BLOCKING                  : ENABLED
UVVM:                ID_WATCHDOG                  : ENABLED
UVVM:                ID_POS_ACK                   : ENABLED
UVVM:                ID_LOG_HDR                   : ENABLED
UVVM:                ID_LOG_HDR_LARGE             : ENABLED
UVVM:                ID_LOG_HDR_XL                : ENABLED
UVVM:                ID_SEQUENCER                 : ENABLED
UVVM:                ID_SEQUENCER_SUB             : ENABLED
UVVM:                ID_BFM                       : ENABLED
UVVM:                ID_BFM_WAIT                  : ENABLED
UVVM:                ID_BFM_POLL                  : ENABLED
UVVM:                ID_BFM_POLL_SUMMARY          : ENABLED
UVVM:                ID_CHANNEL_BFM               : ENABLED
UVVM:                ID_TERMINATE_CMD             : ENABLED
UVVM:                ID_SEGMENT_INITIATE          : ENABLED
UVVM:                ID_SEGMENT_COMPLETE          : ENABLED
UVVM:                ID_SEGMENT_HDR               : ENABLED
UVVM:                ID_SEGMENT_DATA              : ENABLED
UVVM:                ID_PACKET_INITIATE           : ENABLED
UVVM:                ID_PACKET_PREAMBLE           : ENABLED
UVVM:                ID_PACKET_COMPLETE           : ENABLED
UVVM:                ID_PACKET_HDR                : ENABLED
UVVM:                ID_PACKET_DATA               : ENABLED
UVVM:                ID_PACKET_CHECKSUM           : ENABLED
UVVM:                ID_PACKET_GAP                : ENABLED
UVVM:                ID_FRAME_INITIATE            : ENABLED
UVVM:                ID_FRAME_COMPLETE            : ENABLED
UVVM:                ID_FRAME_HDR                 : ENABLED
UVVM:                ID_FRAME_DATA                : ENABLED
UVVM:                ID_COVERAGE_MAKEBIN          : DISABLED
UVVM:                ID_COVERAGE_ADDBIN           : DISABLED
UVVM:                ID_COVERAGE_ICOVER           : DISABLED
UVVM:                ID_COVERAGE_CONFIG           : ENABLED
UVVM:                ID_COVERAGE_SUMMARY          : ENABLED
UVVM:                ID_COVERAGE_HOLES            : ENABLED
UVVM:                ID_UVVM_SEND_CMD             : ENABLED
UVVM:                ID_UVVM_CMD_ACK              : ENABLED
UVVM:                ID_UVVM_CMD_RESULT           : ENABLED
UVVM:                ID_CMD_INTERPRETER           : ENABLED
UVVM:                ID_CMD_INTERPRETER_WAIT      : ENABLED
UVVM:                ID_IMMEDIATE_CMD             : ENABLED
UVVM:                ID_IMMEDIATE_CMD_WAIT        : ENABLED
UVVM:                ID_CMD_EXECUTOR              : ENABLED
UVVM:                ID_CMD_EXECUTOR_WAIT         : ENABLED
UVVM:                ID_CHANNEL_EXECUTOR          : ENABLED
UVVM:                ID_CHANNEL_EXECUTOR_WAIT     : ENABLED
UVVM:                ID_NEW_HVVC_CMD_SEQ          : ENABLED
UVVM:                ID_INSERTED_DELAY            : ENABLED
UVVM:                ID_OLD_AWAIT_COMPLETION      : ENABLED
UVVM:                ID_AWAIT_COMPLETION          : ENABLED
UVVM:                ID_AWAIT_COMPLETION_LIST     : ENABLED
UVVM:                ID_AWAIT_COMPLETION_WAIT     : ENABLED
UVVM:                ID_AWAIT_COMPLETION_END      : ENABLED
UVVM:                ID_UVVM_DATA_QUEUE           : ENABLED
UVVM:                ID_CONSTRUCTOR               : ENABLED
UVVM:                ID_CONSTRUCTOR_SUB           : ENABLED
UVVM:                ID_VVC_ACTIVITY              : ENABLED
UVVM:                ID_MONITOR                   : ENABLED
UVVM:                ID_MONITOR_ERROR             : ENABLED
UVVM:                ID_DATA                      : ENABLED
UVVM:                ID_CTRL                      : ENABLED
UVVM:                ID_FILE_OPEN_CLOSE           : ENABLED
UVVM:                ID_FILE_PARSER               : ENABLED
UVVM:                ID_SPEC_COV                  : ENABLED
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8100000 ps. Watchdog A
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8200000 ps. Watchdog B
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8300000 ps. Watchdog C
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 100000000 ps. Watchdog D
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         1.0 ns  (non scoped)                   Verifying logging and alerts
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         1.0 ns  TB seq.                        My Log header 
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_BFM                             1.0 ns  My scope                       My short message
UVVM: 
UVVM: ***  NOTE #1  ***
UVVM:             1 ns   my_scope
UVVM:                    my_msg dasdsa dasd as dad ad asd asd as das dasd adas dasd asda sdas das das das dsa dsa das das das das das das dasdasdasd asd
UVVM: 
UVVM: ID_BFM                             1.0 ns  My long scope............      My long message  qqqqq w wwwww ee eee r rr r r t tt ttttttt y yyyyyyyy uuuuuuuu iii ii ii o o
UVVM:                                                                           ooo o o ppppppp  aaaaaaaa              ssss ddddddffffff ffffff gggggg hhhhhh jjjjj
UVVM:                                                                           ekstra
UVVM: ID_BFM                             1.0 ns  My .........                   My multiline message 
UVVM:                                                                           qqqqq w wwwww ee eee r rr r r t
UVVM:                                                                           11
UVVM:                                                                           aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
UVVM:                                                                           aaaaaaaaaaaaaaaaaaaaa extra
UVVM:                                                                           lkkl fdafd fdsf sdfsdfsd f sdfsd f ds fsd fsdfsd f sdf sdf sdf dfsdfdsfsdf ds f dsf ds fsd fsd
UVVM:                                                                           fsd fdsf sdf sdfsdf dsfds f sdfsdfsdf sdf dsf  BSN
UVVM:                                                                           BSN \b fsd fs
UVVM:                                                                           fdfdf sdfsd fsdf sd fds fsd fsd fs df sdf sdf sdf sd fsd fsdfsd fsdfsd fsd fsd f sdf sdf sd f
UVVM:                                                                           sdf sdf d f df sdf ds fsd f sdf dsf 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #1  ***
UVVM:             1 ns   my_scope
UVVM:                    my_msg dasdas das dasdasdasd as das da sd asdas dasdasd  dasdasdsdasdas das d asd as das das das das dasdasdas das das d as das das dasd
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_BFM                             1.0 ns  (non scoped)                   Kort multiline
UVVM:                                                                           ddasdadad
UVVM:                                                                           daddfad 
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Check various versions of linefeed (pre, post, only)
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        
UVVM:                                                                            Pre, followed by blank
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        
UVVM:                                                                           Pre, followed by char
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Post, preceeded by blank 
UVVM:                                                                           
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Post, preceeded by char
UVVM:                                                                           
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Next is single linefeed only
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        
UVVM:                                                                           
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Linefeeds completed. Please check above
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        
UVVM: ID_SEQUENCER                       1.0 ns  TB seq.                        Above two lines: First empty string, then single char.
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Alert check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_warnings_or_worse expected and actual mismatch'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Alert check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_errors_or_worse expected and actual mismatch'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected NOTEs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Alert check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_warnings_or_worse correctly updated'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Alert check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_errors_or_worse correctly updated'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  NOTE #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting note alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected NOTEs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected NOTEs by 1. 
UVVM: 
UVVM: ***  NOTE #3  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting note alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  TB_NOTE #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_note alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_NOTEs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_NOTEs by 1. 
UVVM: 
UVVM: ***  TB_NOTE #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_note alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  WARNING #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting warning alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected WARNINGs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected WARNINGs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  WARNING #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting warning alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  TB_WARNING #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_warning alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  TB_WARNING #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_warning alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: ***  MANUAL_CHECK #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting manual_check alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected MANUAL_CHECKs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected MANUAL_CHECKs by 1. 
UVVM: 
UVVM: ***  MANUAL_CHECK #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting manual_check alert for shared_uvvm_status simulation_successful status test.
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting error alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #3  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting error alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_error alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_error alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  FAILURE #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting failure alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected FAILUREs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected FAILUREs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  FAILURE #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting failure alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_FAILURE #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_failure alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate fail.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_FAILUREs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_FAILUREs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 1. 'Expected that shared_uvvm_status indicate mismatch.'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_FAILURE #2  ***
UVVM:             1 ns   TB seq.
UVVM:                    Setting tb_failure alert for shared_uvvm_status simulation_successful status test.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate success.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Expected that shared_uvvm_status indicate no mismatch.'
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** INTERMEDIATE SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      3         3         0         ok
UVVM:                TB_NOTE      :      2         2         0         ok
UVVM:                WARNING      :      2         2         0         ok
UVVM:                TB_WARNING   :      2         2         0         ok
UVVM:                MANUAL_CHECK :      2         2         0         ok
UVVM:                ERROR        :      3         3         0         ok
UVVM:                TB_ERROR     :      2         2         0         ok
UVVM:                FAILURE      :      2         2         0         ok
UVVM:                TB_FAILURE   :      2         2         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** FINAL SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      3         3         0         ok
UVVM:                TB_NOTE      :      2         2         0         ok
UVVM:                WARNING      :      2         2         0         ok
UVVM:                TB_WARNING   :      2         2         0         ok
UVVM:                MANUAL_CHECK :      2         2         0         ok
UVVM:                ERROR        :      3         3         0         ok
UVVM:                TB_ERROR     :      2         2         0         ok
UVVM:                FAILURE      :      2         2         0         ok
UVVM:                TB_FAILURE   :      2         2         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      >> Simulation SUCCESS: No mismatch between counted and expected serious alerts
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                      1001.0 ns  TB seq                         SIMULATION COMPLETED
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
