UVVM Utility Library - Overview on Versions and Changes
==============================================================

----------------------------------------------------------------------

v2.19.4
----------
Released: 2024-03-08
- Moved t_transaction_status type to types_pkg and added COMPLETED.
- Added function for extracting closest time unit for time type.
- Changed check_value and check_value_in_ranged to print formatted time types with closest fitting time unit.
- Added subtypes used as null vectors to reduce the number of compilation warnings in rand_pkg.
- Added for latest version of Modelsim.
- Fixed a bug in func_cov_pkg when using Modelsim 2023.4 which caused transition bins to be sampled incorrectly.

v2.19.3
----------
Released: 2023-09-16
- Fixed compilation warning on rand_pkg regarding a truncated value.
- Fixed optimization warning on methods_pkg regarding a string comparison.
- Updated the constant default values related to the cmd/results queues in adaptations_pkg.
- Added filter for (vcom-1246) warning in TCL compile script.

v2.19.2
----------
Released: 2023-03-10
- C_MAX_VVC_INSTANCE_NUM in adaptions_pkg.vhd had to be increased from 8 to 10.
- Fixed compilation warnings on rand_pkg regarding a truncated value.
- Fixed compilation warnings on string_methods_pkg regarding using an attribute on a function call.
- Fixed random() time function and procedure overflowing when default time resolution was too small for a given range.
- Added an overload for the random() time function and procedure with a parameter to select the time resolution.
- Fixed possible overflow when randomizing with multiple ranges.

v2.19.1
----------
Released: 2022-10-07
- Fixed to_string() function not calculating the max size correctly.

v2.19.0
----------
Released: 2022-05-05
- FC: Generate an alert when adding bins to a coverpoint which has been sampled.
- FC: Major updates in the coverage database accumulation mechanism.
- FC: Added a python script to merge coverage database files.
- FC: Fixed a bug in set_num_allocated_bins() not allowing to reduce size.
- FC: Disabled extra randomization log messages when using optimized randomization.
- FC: Fixed bins not being added when concatenated after ignore or illegal bins.
- Added demo for advanced randomization and functional coverage.
- Moved RST documentation for rand_pkg and func_cov_pkg to uvvm/doc.
- t_element record declaration formatting.

v2.18.1
----------
Released: 2021-11-12
- Added support for multi-method time, real_vector, time_vector, signed and std_logic_vector randomization constraints.
- Fixed a bug where using exclude constraints to remove all valid constraints would cause a deadlock in randomization.
- Fixed duplicated alert messages in randomization vector types.
- Added parameters to F.C. report procedures to write to a separate file.
- Print the F.C. coverage report when loading a coverpoint's database.

v2.18.0
----------
Released: 2021-10-22
- Fixed generic_queue deleting wrong element when position is different from entry_num.
- Fixed generic_queue print_queue() crashing when queue is empty.
- Added MATCH_STD_INCL_ZXUW to match strictness for check_value(), await_value()
  and matching_values().
- Fixed issue when using don't care in SLVs with check_value() and match strictness
  set to MATCH_STD_INCL_Z.
- Added rand_pkg (advanced randomization).
- Added func_cov_pkg (functional coverage).
- Added new documentation type (.rst and .html) for rand_pkg and func_cov_pkg.
  See uvvm_util/doc/rand_and_func_cov.html and uvvm_util/doc/rst/index.rst for
  documentation.

v2.17.0
----------
Released: 2021-05-26
- Added MATCH_STD_INCL_Z to await_value() for SL and SLV.
- Summary alert report and hierarchical alerts report updated to 
  warn for minor alert mismatch.
- Generic queue allow to insert to an empty queue with identifier position
  set to POSITION and position set to 1.
- Fixed bug in check_counters that would cause the counter value to
  increase to quickly.
- Added C_ENABLE_CHECK_COUNTER to adaptations_pkg, default set to True.
- Fixed an issue with VVC name indexing in ti_protected_types_pkg priv_get_vvc_idx().
- Added some missing deallocating of lines in in methods_pkg.

v2.16.0
----------
Released: 2021-04-08
- Fixed width detection method for to_string() functions that would make
  GHDL simulator fail or create null arrays.
- Moved timestamp_header() function from generic_sb_pkg to string_methods_pkg.
- Added t_natural_vector and t_positive_vector types to types_pkg.
- Added to_string() overloads for t_natural_vector, integer_vector, real_vector and time_vector types.

v2.15.1
----------
Released: 2020-XX-XX
- Fixed to_string(integer) function using a negative value.
- Fixed random time function by using the simulator base time unit instead of ns.
- Fixed random function overflowing with maximum values in min/max range.

v2.15.0
----------
Released: 2020-10-06
- Added constant C_UVVM_VERSION with UVVM release version number.
- Corrected normalize_and_check() description in QR.
- Corrected default KEEP_LEADING_0 for check_value() in QR.
- Removed SLV range check for t_slv_array version of normalize_and_check().

v2.14.2
----------
Released: 2020-08-21
- Added missing queue, FIFO and stack in Util package.

v2.14.1
----------
Released: 2020-08-18
- Removed C_VVCT_ALL_INSTANCES as it is a duplicate of ALL_INSTANCES. 
- Added fix with gen_pulse() method for slv with don't care.
- Added more info to set_log_destination method in Util QR.

v2.14.0
----------
Released: 2020-05-19
- Added new msg_ids in adaptations_pkg: ID_NEW_HVVC_CMD_SEQ & ID_VVC_ACTIVITY, ID_AWAIT_COMPLETION,
  ID_AWAIT_COMPLETION_LIST, ID_AWAIT_COMPLETION_WAIT, ID_AWAIT_COMPLETION_END.
- Added new type t_activity(ACTIVE, INACTIVE) to types_pkg.
- Added missing t_byte_endianness enums.

v2.13.1
----------
Released: 2020-04-20
- Updated Util QR check_value() with MATCH_STD_INCL_Z option.

v2.13.0
----------
Released: 2020-03-30
- Added NA element to type t_enabled.
- Added C_UNUSED_MSG_ID_PANEL and removed t_vvc record in adaptations_pkg.
- Removed type t_use_provided_msg_id_panel.
- Added CHECK counters and report_check_counters() method.

v2.12.0
----------
Released: 2020-03-06
- Added 3 new msg_ids in adaptations_pkg: ID_PACKET_PREAMBLE, ID_PACKET_CHECKSUM and ID_PACKET_GAP.
- Moved t_channel from types_pkg to adaptations_pkg.
- Changed t_byte_endianness elements names and added an alias t_word_endianness.
- Removed unnecessary ascending parameter in convert_slv_array_to_byte_array function.
- Added functions convert_byte_array_to_slv and convert_slv_to_byte_array to methods_pkg.


v2.11.1
----------
Released: 2020-02-16
- Added a constant C_UVVM_TIMEOUT in adaptations_pkg as a general timeout for
  UVVM wait statements.
- Updated Quickref BFM common package section.
- Added default scope and changed alert message for check_file_open_status()
  in UVVM Util.


v2.11.0
----------
Released: 2020-01-24
- Created new constant C_MAX_TB_VVC_NUM for activity watchdog VVC register.
- Reduced C_MAX_VVC_INSTANCE_NUM from 20 to 8.
- Added wait_on_bfm_sync_start(), wait_on_bfm_exit() and check_clock_period_margin()
  methods for synchronising clock signal driven BFMs and verifying specified 
  clock period.
- Added t_slv_array_ptr type.
- Added a log2 function.
- Added a to_string function for integer type with output as DEC, HEX or BIN.


v2.10.1
----------
Released: 2019-12-04
- Removed t_coverage from adaptation_pkg


v2.10.0
----------
Released: 2019-11-21
- Added timeout watchdog. See UVVM Util quick reference for more information.
- Updated LICENSE.TXT


v2.9.0
----------
Released: 2019-09-02
- Bug fix for std.env.stop return value when UVVM stop simulations if stop-limit is
  reached for a given alert.


v2.8.0
----------
Released: 2019-06-06
- Changes to synchronization flag methods with local record and function.
  Added scope and already_blocked_severity as optional inputs.
- Moved C_NUM_SYNC_FLAGS to adaptation_pkg. t_sync_flag_record_array and
  shared_flag_array was modified to match this.
- Fixed fatal error in convert_slv_array_to_byte when using ascending std_logic_vector.
- Removed extra spaces in log reports.
- Added optional scope to all CDMs.
- Updated documentation.
- Added support for several backslash-r in log method.
- Added scope to enable_log_msg and disable_log_msg.
- Added ascending slv support to convert_slv_array_to_byte_array function.


v2.7.0
----------
Released: 2018-12-03
- Updated documentation
- Check value with std_logic/std_logic_vector now have option, MATCH_STD_INCL_Z,
  that also includes match of 'Z'.


v2.6.0
----------
Released: 2018-08-30
- Updated documentation
- Compile script changed according to new structure
- Fixed simulation status in shared_uvvm_status and hierarchical alert messages
- New package for global signals and shared variables added, global_signals_and_shared_variables_pkg.vhd.


v2.5.0
----------
Released: 2018-07-02
- Added message id ID_DATA and ID_CTRL.
- Added constants ALL_ENABLED_INTSTANCES, C_MAX_QUEUE_INSTANCE_NUM,
  C_SB_TAG_WIDTH, C_SB_SOURCE_WIDTH, C_SB_SLV_WIDTH.
- Added types positve_vector and natural_vector.
- Added types t_identifier_option, t_range_option, t_tag_usage and t_void_bfm_config.


v2.4.0
----------
Released: 2018-04-09
- Changed to KEEP_LEADING_0 in check_value() for SLV, signed and unsigned.
- Added t_info_on_finishing_await_any_completion with VVC name, index and
  time of competion to t_shared_uvvm_status.
- Added increment_expected_alerts_and_stop_limit()
- Made ID_LOG_MSG_CTRL always visible in the transcript window.
- Added padding of leading zeros to check_values() with SLVs of different
  lengths.


v2.3.1
----------
Released: 2017-12-20
- Added constant C_TB_MSG_ID_DEFAULT for simplified log() procedure.
- Added simplified log() procedure. Now the log() procedure can be called
  simply with the logging message. Msg_id will be the default, set in
  C_TB_MSG_ID_DEFAULT, located in the adaptions_pkg.
- Increased default for C_MAX_VVC_INSTANCE_NUM from 8 to 20.

v2.3.0
----------
Released: 2017-11-16
- Added switch C_USE_STD_STOP_ON_ALERT_STOP_LIMIT to select how simulation
  should stop if alert limit is reached.
- Changed alert to TB_ERROR if set_alert_attention() is called with other
  t_attention parameter than REGARD or IGNORE.
- Updated QR version number.

v2.2.0
----------
Released: 2017-10-16
- Added compile library name to compile_order.txt for use in compile_src.do
  script and GHDL compile scripts.
- Added support for input argument number 2 to compile_src.do script for
  specifying output directory.
- Reduced terminal output from Modelsim when running compile scripts.
- Changed simulation stop command to std.env.stop if the expected alert
  level is exceeded.
- Log messages will now appear after command execution in time consuming
  procedures.
- Added constant ALL_INSTANCES for broadcast to all instances of a VVC,
  fixing documentation and code mismatch.
- Added unconstrained array types t_slv_array, t_signed_array and
  t_unsigned_array.
- Added function convert_slv_array_to_byte_array() and
  convert_byte_array_to_slv_array() to ease type conversion.
- Added t_byte_endianness(FIRST_BYTE_LEFT, FIRST_BYTE_RIGHT) for use in
  conversions between t_slv_array and t_byte_array.
- Added t_pulse_continuation(ALLOW_PULSE_CONTINUATION,
  NO_PULSE_CONTINUATION_ALLOWED).
- Changed clocked version of gen_pulse() to synchronize to falling edge on
  pulse setup, and falling edge on exit.
- Added adjustable_clock_generator(), supporting adjustable clock periods
  while running.
- Fixed bug in SL and SLV versions of random() with seeds.
- Updated util_quick_ref.pdf

v2.1.1
----------
Released: 2017-06-08
- Corrected year in v2.1.0 changes
- Changed variable name in compile script to fix error with Aldex Active-HDL
- Added compile order file to script folder

v2.1.0
----------
Released: 2017-05-16
- Fixed bug in clock_generator method
- Added Status record to indicate the success or failure of a simulation
- Updated QuickRefs
- gen_pulse now supports don't care for SLVs

v2.0.5
----------
Released: 2017-04-28
- Updated formatting in documentation
- Improved clock_generator procedure
- Added dedicated functionality for signed/unsigned check_value_in_range()
- Added function matching_values() to external calls

v2.0.4
----------
Released: 2017-03-16
- Updated Modelsim .mpf file and documentation

v2.0.3
----------
Released: 2017-02-13
- Applied minor bugfixes and updated documentation for v2.0.x

v2.0.2
----------
Released: 2017-02-01
- Applied minor bugfixes after beta testing


v2.0.1
----------
Released: 2017-01-27
- Add check in procedures gen_pulse() not pulsing to same value as before. Add some Overloaded procedures of gen_pulse().
- Add ID_INSERTED_DELAY to adaptations_pkg.vhd


v1.3.2
----------
Released: 2016-10-28

All changes should be backwards compatible within 1.x.x
- Corrected radix logging in check_value method
- Minor bugfixes


v1.3.1
----------
Released: 2016-08-30

All changes should be backwards compatible within 1.x.x
- Bug fix in procedure check_value() for std_logic: Changed match strictness
  from MATCH_EXACT to MATCH_STD to make it equal to function check_value()
  for std_logic and equal to what is documented in the Quickref.

v1.3.0
----------
Released: 2016-05-02

All changes should be backwards compatible within 1.x.x
- Improved method of setting log line width by adding the subfield widths
- Added new constant C_LOG_LINE_SPACINGS that clearly shows what part of the
  message is used for spaces
- Show log id/scope is now set by a constant (was global signal), and the
  total log line width is checked during initialization.
- Removed OSVVM default log msg id panel C_OSVVM_DEFAULT_MSG_ID_PANEL.
  Using C_MSG_ID_PANEL_DEFAULT instead.
- clock_generator: Removed a printout that indicated that the clock was
  stopped at time 0. Clock was not started previous to the message.
- Added new msg ids ID_BFM_POLL_SUMMARY and ID_UVVM_DATA_QUEUE
- to_string for string type: Now ignores LF character. Log and alert procedures
  call to_string on msg and scope inputs.
- to_string for t_byte_array: radix parameter now optional
- An alert with severity TB_WARNING is now triggered if attempting
  to enable msg id ID_NEVER
- set_alert_file_name/set_log_file name: msg id parameter was not
  in use. Removed the parameter from Quick-reference and added an
  overload that does not have msg id as a parameter
- Quickref: gen_pulse was missing mandatory msg parameter on front page


v1.2.0
----------
Released: 2016-03-16

All changes should be backwards compatible within 1.x.x
- Added uvvm_osvvm
- Added optional output signal clock_count to clock generators.
- Added new type t_byte_array and a to_string overload for this type.
- Added new overload of disable_log_msg that does not require a msg parameter
- Added quietness parameter to enable_log_msg.
- Added a new shared variable to adaptations_pkg, shared_default_log_destination,
  that sets the default log destination. Procedure set_log_destination() can be
  used to set this parameter in run-time.
- QuickRef:
  - Added more information on how to use Message IDs in section 1.9

v1.1.2
----------
Released: 2016-01-20

All changes should be backwards compatible within 1.x.x
- License conditions have changed. UVVM Utility Library is now released
  under the MIT license, see LICENSE.txt
- Added ability to set duty cycle in clock_generator() procedures,
  either by percentage or time.
- Clock generators: Variable v_first_half_clk_period is now constant
  C_FIRST_HALF_CLK_PERIOD since it shall not change in the procedures.
- Removed redundant to_string() overloads that are provided by the VHDL-2008
  standard. These overloads were not listed in the Quick Reference as they
  were only meant to be used by UVVM-Util itself. The behaviour of UVVM-Util
  after this change is the same.
- QuickRef:
  - Added examples to all methods.
  - Changed bracket style of optional parameters.
- Added a demo directory that contains a list of demo testbenches that can
  be run to demonstrate the UVVM Utility Library.

v1.1.1
----------
Released: 2015-12-08

All changes should be backwards compatible within 1.x.x
- Added new optional parameter for check_value and await_value for SL/SLV to set if
  match is exact match (MATCH_EXACT) or std_match (MATCH_STD)
- C_WARNING_ON_LOG_ALERT_FILE_RUNTIME_RENAME is not default false
- Compile order in the QuickRef has been updated
- Description of how BVUL users can start using UVVM-Util has been added to the
  README.txt file
- Added chapter in QuickRef for Hierarchical Alerts

v1.1.0
----------
Released: 2015-11-18

All changes should be backwards compatible within 1.x.x
- Renamed C_CMD_QUEUE_COUNT_ALERT_LEVEL to C_CMD_QUEUE_COUNT_THRESHOLD
- Renamed C_CMD_QUEUE_COUNT_ALERT_LEVEL_SEVERITY to C_CMD_QUEUE_COUNT_THRESHOLD_SEVERITY
- Added t_inter_bfm_delay_type for time delay and clock cycle delay in VVCs
- Added wait_num_rising_edge and wait_num_rising_edge_plus_margin procedures
- Added ALL_CHANNELS to the t_channel type
- Updated QuickRef with new style
- Fixed typo in get_string_between_delimiters function
- It is now possible to set new log/alert output file at runtime
- Added new justify function. Old version will be deprecated in next major release
- Added new to_string for int and bool. Old version will be deprecated in next major release
- Added function pad_string
- Added on/off switch (C_USE_BACKSLASH_R_AS_LF) for \r


v1.0.2
----------
Released: 2015-10-20

All changes should be backwards compatible within 1.x.x
- Updated license printout


v1.0.1
----------
Released: 2015-10-12

All changes should be backwards compatible within 1.x.x
- Renamed constant in adaptations pkg from C_NUMBER_OF_BITS_PER_DATA_BUFFER
  to C_TOTAL_NUMBER_OF_BITS_IN_DATA_BUFFER.

v1.0.0
----------
Released: 2015-10-09

All changes should be backwards compatible within 1.x.x
- First version. Hence no change history for the UVVM Utility Library.
  This library is a continuation and expansion of the Bitvis Utility Library.
  The Bitvis Utility Library is discontinued as of version 2.6.0 (except for bug fixes).
  See the Bitvis Utility Library v2.6.0 for full change history prior to the release of
  UVVM.
  -Important changes since release of the Bitvis Utility Library v2.6.0:
    - Removed support for VHDL93 and VHDL2002
    - Included support for hierarchical alert reporting. Hierarchical alert reporting
      allows for a hierarchy tree to be defined during run-time. The alert summary will
      then be shown as a tree of defined scopes. Alert counters will propagate up the tree
      to the top level, and stop limits can be set at each level in the hierarchy.
      See the PowerPoint presentation 'UVVM_Utility_Library_Concepts_and_Usage.pps' for
      more information.



