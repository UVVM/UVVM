UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ID_LOG_HDR_LARGE                   0.0 ns  TB seq.                        Start Simulation of Randomization package - rand_cyclic
UVVM: =========================================================================================================================================================================
UVVM: ID_LOG_MSG_CTRL                    0.0 ns  TB seq.                        enable_log_msg(ID_RAND_GEN). 
UVVM: ID_LOG_MSG_CTRL                    0.0 ns  TB seq.                        enable_log_msg(ID_RAND_CONF). 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (unconstrained)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> 2140145472
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2140145472.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> -645178924
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -645178924.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> -764837137
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -764837137.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> 1603044932
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1603044932.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> -2120795326
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2120795326.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> -2122433286
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2122433286.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(UNCONSTRAINED, CYCLIC)=> -1245328362
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1245328362.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (range)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([15:16])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-7:-5])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 15
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 15.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -7
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 16
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 16.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -7
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 16
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 16.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 15
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 15.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 15
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 15.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -7
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 16
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 16.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:9],[15:16],[-7:-5], CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(20)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5, -3, 4)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(6, 8)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(10, 20, -5, -3, 4, 6, 8), CYCLIC)=> 20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-1, 0, 1)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(10)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(100)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> 954915484
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 954915484.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> -1084779968
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1084779968.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> 841423615
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 841423615.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> -1248800908
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1248800908.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> 393518735
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 393518735.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> -907741777
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -907741777.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> 1751050720
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1751050720.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (range + set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-1:1])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1], ADD:(10), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5, -3, 4)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 1
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-1:1],[8:9], ADD:(10, -5, -3, 4), CYCLIC)=> -5
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (range + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-1, 0, 1)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:10])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 9
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 9.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], EXCL:(-1, 0, 1, 10), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-6, -4, -2, 0, 2, 4, 6)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-2, 0, 2)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> -6
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer (range + set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5, -3, 4)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-5, -1, 1)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2], ADD:(-5, -3, 4), EXCL:(-5, -1, 1), CYCLIC)=> 2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:10])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(20, 30, 40)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(9, 30, 40)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           4
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           10
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 10.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -2
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           -3
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           20
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 20.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           0
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2:2],[8:10], ADD:(-5, -3, 4, 20, 30, 40), EXCL:(-5, -1, 1, 9, 30, 40), CYCLIC)=>
UVVM:                                                                           8
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (unconstrained)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, CYCLIC)=> (1172378174, -395763659, -412739977, -2133664884, 566948199)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (1172378174, -395763659, -412739977, -2133664884, 566948199).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, CYCLIC)=> (-995790927, -2102877925, -836208119, -229809858, -1887547867)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-995790927, -2102877925, -836208119, -229809858, -1887547867).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, CYCLIC)=> (437030798, -14493346, -1894744920, -1500476325, 172349609)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (437030798, -14493346, -1894744920, -1500476325, 172349609).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (range)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], CYCLIC)=> (0, -1, 1, 2, -2)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (0, -1, 1, 2, -2).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], CYCLIC)=> (-2, 2, 1, -1, 0)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-2, 2, 1, -1, 0).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], CYCLIC)=> (-1, -2, 2, 1, 0)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-1, -2, 2, 1, 0).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-2, -1, 0, 1, 2)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-2, -1, 0, 1, 2), CYCLIC)=> (1, -1, -2, 2, 0)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (1, -1, -2, 2, 0).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-2, -1, 0, 1, 2), CYCLIC)=> (2, -1, 1, -2, 0)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (2, -1, 1, -2, 0).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-2, -1, 0, 1, 2), CYCLIC)=> (2, 0, -1, -2, 1)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (2, 0, -1, -2, 1).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-1, 0, 1)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(10)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(100)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> (-1065189197, 1036532182, 1422889311,
UVVM:                                                                           -1058244239, -1672898412)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-1065189197, 1036532182, 1422889311, -1058244239, -1672898412).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> (-2057007166, 2053042122, 754505873,
UVVM:                                                                           1491702875, 2028529513)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-2057007166, 2053042122, 754505873, 1491702875, 2028529513).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, EXCL:(-1, 0, 1, 10, 100), CYCLIC)=> (-191645973, 1776561678, 458218277,
UVVM:                                                                           1076661777, -668617782)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-191645973, 1776561678, 458218277, 1076661777, -668617782).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Checking value is different than previous one'
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (range + set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-1:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-1:2], ADD:(-5), CYCLIC)=> (-5, 1, 0, -1, 2)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-5, 1, 0, -1, 2).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-1:2], ADD:(-5), CYCLIC)=> (0, 1, 2, -1, -5)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (0, 1, 2, -1, -5).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-1:2], ADD:(-5), CYCLIC)=> (0, -1, -5, 2, 1)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (0, -1, -5, 2, 1).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (range + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-3:4])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-1, 0, 1)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-3:4], EXCL:(-1, 0, 1), CYCLIC)=> (2, -2, 3, 4, -3)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (2, -2, 3, 4, -3).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-3:4], EXCL:(-1, 0, 1), CYCLIC)=> (-3, 2, 3, -2, 4)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-3, 2, 3, -2, 4).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-3:4], EXCL:(-1, 0, 1), CYCLIC)=> (3, -2, -3, 2, 4)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (3, -2, -3, 2, 4).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-8, -6, -4, -2, 0, 2, 4, 6, 8)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-2, 0, 2, 4)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-8, -6, -4, -2, 0, 2, 4, 6, 8), EXCL:(-2, 0, 2, 4), CYCLIC)=> (-6, 6, -4, 8,
UVVM:                                                                           -8)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-6, 6, -4, 8, -8).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-8, -6, -4, -2, 0, 2, 4, 6, 8), EXCL:(-2, 0, 2, 4), CYCLIC)=> (-8, -6, 8,
UVVM:                                                                           -4, 6)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-8, -6, 8, -4, 6).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, ONLY:(-8, -6, -4, -2, 0, 2, 4, 6, 8), EXCL:(-2, 0, 2, 4), CYCLIC)=> (-6, -8, 6, 8,
UVVM:                                                                           -4)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-6, -8, 6, 8, -4).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing integer_vector (range + set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], ADD:(-5), EXCL:(1), CYCLIC)=> (2, -2, -1, 0, -5)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (2, -2, -1, 0, -5).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], ADD:(-5), EXCL:(1), CYCLIC)=> (-2, 2, -1, -5, 0)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-2, 2, -1, -5, 0).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2:2], ADD:(-5), EXCL:(1), CYCLIC)=> (-2, -1, 0, 2, -5)
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for (-2, -1, 0, 2, -5).
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing real (not supported)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_WARNINGs by 2. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range_real([-2.00:2.00])
UVVM: 
UVVM: ***  TB_WARNING #1  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(RANGE:[-2.00:2.00])=> Cyclic mode not supported for real type. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[-2.00:2.00])=> -1.290328e+00
UVVM: 
UVVM: ***  TB_WARNING #2  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(LEN:5, RANGE:[-2.00:2.00])=> Cyclic mode not supported for real_vector type. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[-2.00:2.00])=> (1.250796e+00, -5.750975e-01, 1.110602e+00, 7.433986e-01,
UVVM:                                                                           -4.547983e-01)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing time (not supported)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_WARNINGs by 2. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range_time([1 ps:5 ps])
UVVM: 
UVVM: ***  TB_WARNING #3  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(RANGE:[1 ps:5 ps])=> Cyclic mode not supported for time type. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(RANGE:[1 ps:5 ps])=> 4 ps
UVVM: 
UVVM: ***  TB_WARNING #4  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(LEN:5, RANGE:[1 ps:5 ps])=> Cyclic mode not supported for time_vector type. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:5, RANGE:[1 ps:5 ps])=> (1 ps, 5 ps, 2 ps, 5 ps, 4 ps)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (length)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (range)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:3])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([14:15])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(0, 1, 2)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(5)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(7, 9)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (exclude)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(0, 1, 2, 3, 4)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(5, 6, 7, 8, 9)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (range + set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(12, 15)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (range + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:3])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1, 2)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:10])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(0, 2, 4, 6, 8, 10, 12)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(2, 6, 10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned (range + set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(7, 8)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1, 8)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([4:6])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10, 12, 15)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(5, 15)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing unsigned constraints (not supported)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range_unsigned([x"00":x"03"])
UVVM: 
UVVM: ***  TB_WARNING #5  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(LEN:4, RANGE:[x"0":x"3"])=> Cyclic mode not supported for unsigned constraints. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[x"0":x"3"])=> x"0"
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (length)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (range)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-5:-4])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([6:7])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[-5:-4],[6:7], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-2, 0, 2)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-5)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(3, 6)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-2, 0, 2, -5, 3, 6), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (exclude)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-5, -4, -3, -2, -1)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(0, 1, 2, 3, 4)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (range + set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-1:1])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-8)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1], ADD:(-8), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([3:5])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-7, 7)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-1:1],[3:5], ADD:(-8, -7, 7), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (range + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-1, 0, 1)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], EXCL:(-1, 0, 1), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([3:5])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(4)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 3.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[3:5], EXCL:(-1, 0, 1, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-6, -4, -2, 0, 2, 4, 6)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(-2, 0, 2)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -4.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -6.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(-6, -4, -2, 0, 2, 4, 6), EXCL:(-2, 0, 2), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 4.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed (range + set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([-2:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(-8, 6)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1, 6)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2], ADD:(-8, 6), EXCL:(1, 6), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([4:5])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(7)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(4)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -8.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for -1.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 2.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 0.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 7.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[-2:2],[4:5], ADD:(-8, 6, 7), EXCL:(1, 6, 4), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for 5.
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing signed constraints (not supported)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range_signed([x"00":x"03"])
UVVM: 
UVVM: ***  TB_WARNING #6  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(LEN:4, RANGE:[x"0":x"3"])=> Cyclic mode not supported for signed constraints. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[x"0":x"3"])=> x"3"
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (length)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (range)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:3])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([14:15])
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:9],[14:15], CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(0, 1, 2)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(5)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(7, 9)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"5"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"5".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 1, 2, 5, 7, 9), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (exclude)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(0, 1, 2, 3, 4)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(5, 6, 7, 8, 9)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"B"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"B".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"E"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"E".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, EXCL:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), CYCLIC)=> x"D"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"D".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (range + set of values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(10), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:9])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(12, 15)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"F"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"F".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"1"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"1".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[8:9], ADD:(10, 12, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (range + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:3])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1, 2)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3], EXCL:(1, 2), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([8:10])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"3"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"3".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:3],[8:10], EXCL:(1, 2, 10), CYCLIC)=> x"9"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"9".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(0, 2, 4, 6, 8, 10, 12)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(2, 6, 10)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, ONLY:(0, 2, 4, 6, 8, 10, 12), EXCL:(2, 6, 10), CYCLIC)=> x"8"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"8".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_constraints()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (range + set of values + exclude values)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([0:2])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(7, 8)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(1, 8)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2], ADD:(7, 8), EXCL:(1, 8), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range([4:6])
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_val(10, 12, 15)
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        excl_val(5, 15)
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"0"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"0".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"C"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"C".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"7"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"7".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"6"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"6".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"4"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"4".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"A"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"A".
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[0:2],[4:6], ADD:(7, 8, 10, 12, 15), EXCL:(1, 8, 5, 15), CYCLIC)=> x"2"
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_rand_value => OK, for x"2".
UVVM: ID_POS_ACK                         0.0 ns  TB seq.                        check_cyclic_distribution => OK.
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing std_logic_vector (unsigned) constraints (not supported)
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        add_range_unsigned([x"00":x"03"])
UVVM: 
UVVM: ***  TB_WARNING #7  ***
UVVM:             0 ns   TB seq.
UVVM:                    randm(LEN:4, RANGE:[x"0":x"3"])=> Cyclic mode not supported for slv constraints. Ignoring cyclic configuration.
UVVM: 
UVVM: ID_RAND_GEN                        0.0 ns  TB seq.                        randm(LEN:4, RANGE:[x"0":x"3"])=> x"3"
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         0.0 ns  TB seq.                        Testing invalid parameters
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        incremented expected TB_ERRORs by 2. 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_uniqueness(UNIQUE)
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #1  ***
UVVM:             0 ns   TB seq.
UVVM:                    set_cyclic_mode(CYCLIC)=> Cyclic mode and uniqueness cannot be combined.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        set_cyclic_mode(CYCLIC)
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #2  ***
UVVM:             0 ns   TB seq.
UVVM:                    set_uniqueness(UNIQUE)=> Uniqueness and cyclic mode cannot be combined.
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_config()
UVVM: ID_RAND_CONF                       0.0 ns  TB seq.                        clear_rand_cyclic()=> Deallocating cyclic list/queue
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** FINAL SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      0         0         0         ok
UVVM:                TB_NOTE      :      0         0         0         ok
UVVM:                WARNING      :      0         0         0         ok
UVVM:                TB_WARNING   :      7         7         0         ok
UVVM:                MANUAL_CHECK :      0         0         0         ok
UVVM:                ERROR        :      0         0         0         ok
UVVM:                TB_ERROR     :      2         2         0         ok
UVVM:                FAILURE      :      0         0         0         ok
UVVM:                TB_FAILURE   :      0         0         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      >> Simulation SUCCESS: No mismatch between counted and expected serious alerts
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                      1000.0 ns  TB seq.                        SIMULATION COMPLETED
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
