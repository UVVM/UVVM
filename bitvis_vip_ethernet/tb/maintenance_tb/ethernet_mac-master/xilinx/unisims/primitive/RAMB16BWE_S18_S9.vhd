-------------------------------------------------------------------------------
-- Copyright (c) 1995/2004 Xilinx, Inc.
-- All Right Reserved.
-------------------------------------------------------------------------------
--   ____  ____
--  /   /\/   /
-- /___/  \  /    Vendor : Xilinx
-- \   \   \/     Version : 11.1
--  \   \         Description : Xilinx Functional Simulation Library Component
--  /   /                     16K-Bit Data and 2K-Bit Parity Single Port Block RAM
-- /___/   /\     Filename : RAMB16BWE_S18_S9.vhd
-- \   \  /  \    Timestamp : Wed Jun 8 16:43:35 PST 2005
--  \___\/\___\
--
-- Generated by : write_vhdl
--
-- Revision:
--    06/08/05 - Initial version.
--    10/19/10 - Padded INIT and SRVAL (CR 578485).
-- End Revision

----- CELL RAMB16BWE_S18_S9 -----

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.VITAL_Timing.all;

library unisim;
use unisim.VCOMPONENTS.all;

entity RAMB16BWE_S18_S9 is
generic (

	INIT_00 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_01 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_02 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_03 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_04 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_05 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_06 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_07 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_08 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_09 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_0F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_10 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_11 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_12 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_13 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_14 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_15 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_16 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_17 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_18 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_19 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_1F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_20 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_21 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_22 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_23 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_24 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_25 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_26 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_27 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_28 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_29 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_2F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_30 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_31 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_32 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_33 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_34 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_35 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_36 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_37 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_38 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_39 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INIT_3F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";

	INIT_A : bit_vector := X"00000";
	INIT_B : bit_vector := X"000";

	INITP_00 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_01 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_02 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_03 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_04 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_05 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_06 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
	INITP_07 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";

	SIM_COLLISION_CHECK : string := "ALL";

	SRVAL_A  : bit_vector := X"00000";
	SRVAL_B  : bit_vector := X"000";

	WRITE_MODE_A : string := "WRITE_FIRST";
	WRITE_MODE_B : string := "WRITE_FIRST"
	);

port (
	DOA : out std_logic_vector(15 downto 0);
	DOB : out std_logic_vector(7 downto 0);
	DOPA : out std_logic_vector(1 downto 0);
	DOPB : out std_logic_vector(0 downto 0);

	ADDRA : in std_logic_vector(9 downto 0);
	ADDRB : in std_logic_vector(10 downto 0);
	CLKA : in std_ulogic;
	CLKB : in std_ulogic;
	DIA : in std_logic_vector(15 downto 0);
	DIB : in std_logic_vector(7 downto 0);
	DIPA : in std_logic_vector(1 downto 0);
	DIPB : in std_logic_vector(0 downto 0);
	ENA : in std_ulogic;
	ENB : in std_ulogic;
	SSRA : in std_ulogic;
	SSRB : in std_ulogic;
	WEA :  in std_logic_vector(1 downto 0);
	WEB :  in std_ulogic
     );
end RAMB16BWE_S18_S9;

-- Architecture body --

architecture RAMB16BWE_S18_S9_V of RAMB16BWE_S18_S9 is

 signal DOA_open  : std_logic_vector(15 downto 0);
 signal DOB_open  : std_logic_vector(23 downto 0);
 signal DOPA_open : std_logic_vector(1 downto 0);
 signal DOPB_open : std_logic_vector(2 downto 0);

 signal ADDRA_GND : std_logic_vector(3 downto 0) := (others => '0');
 signal ADDRB_GND : std_logic_vector(2 downto 0) := (others => '0');

 signal DIA_GND : std_logic_vector(15 downto 0) := (others => '0');
 signal DIB_GND : std_logic_vector(23 downto 0) := (others => '0');

 signal DIPA_GND : std_logic_vector(1 downto 0) := (others => '0');
 signal DIPB_GND : std_logic_vector(2 downto 0) := (others => '0');

begin
-- RAMB16BWE Instantiation (port map, generic map)
RAMB16BWE_inst : RAMB16BWE
	generic map (
	DATA_WIDTH_A => 18,
	DATA_WIDTH_B => 9,

	INIT_00 => INIT_00,
	INIT_01 => INIT_01,
	INIT_02 => INIT_02,
	INIT_03 => INIT_03,
	INIT_04 => INIT_04,
	INIT_05 => INIT_05,
	INIT_06 => INIT_06,
	INIT_07 => INIT_07,
	INIT_08 => INIT_08,
	INIT_09 => INIT_09,
	INIT_0A => INIT_0A,
	INIT_0B => INIT_0B,
	INIT_0C => INIT_0C,
	INIT_0D => INIT_0D,
	INIT_0E => INIT_0E,
	INIT_0F => INIT_0F,
	INIT_10 => INIT_10,
	INIT_11 => INIT_11,
	INIT_12 => INIT_12,
	INIT_13 => INIT_13,
	INIT_14 => INIT_14,
	INIT_15 => INIT_15,
	INIT_16 => INIT_16,
	INIT_17 => INIT_17,
	INIT_18 => INIT_18,
	INIT_19 => INIT_19,
	INIT_1A => INIT_1A,
	INIT_1B => INIT_1B,
	INIT_1C => INIT_1C,
	INIT_1D => INIT_1D,
	INIT_1E => INIT_1E,
	INIT_1F => INIT_1F,
	INIT_20 => INIT_20,
	INIT_21 => INIT_21,
	INIT_22 => INIT_22,
	INIT_23 => INIT_23,
	INIT_24 => INIT_24,
	INIT_25 => INIT_25,
	INIT_26 => INIT_26,
	INIT_27 => INIT_27,
	INIT_28 => INIT_28,
	INIT_29 => INIT_29,
	INIT_2A => INIT_2A,
	INIT_2B => INIT_2B,
	INIT_2C => INIT_2C,
	INIT_2D => INIT_2D,
	INIT_2E => INIT_2E,
	INIT_2F => INIT_2F,
	INIT_30 => INIT_30,
	INIT_31 => INIT_31,
	INIT_32 => INIT_32,
	INIT_33 => INIT_33,
	INIT_34 => INIT_34,
	INIT_35 => INIT_35,
	INIT_36 => INIT_36,
	INIT_37 => INIT_37,
	INIT_38 => INIT_38,
	INIT_39 => INIT_39,
	INIT_3A => INIT_3A,
	INIT_3B => INIT_3B,
	INIT_3C => INIT_3C,
	INIT_3D => INIT_3D,
	INIT_3E => INIT_3E,
	INIT_3F => INIT_3F,

	INIT_A  => X"0000" & INIT_A,
	INIT_B  => X"000000" & INIT_B,

	INITP_00 => INITP_00,
	INITP_01 => INITP_01,
	INITP_02 => INITP_02,
	INITP_03 => INITP_03,
	INITP_04 => INITP_04,
	INITP_05 => INITP_05,
	INITP_06 => INITP_06,
	INITP_07 => INITP_07,

	SIM_COLLISION_CHECK => SIM_COLLISION_CHECK,

	SRVAL_A => X"0000" &SRVAL_A,
	SRVAL_B => X"000000" & SRVAL_B,

	WRITE_MODE_A => WRITE_MODE_A,
	WRITE_MODE_B => WRITE_MODE_B
	)
port map (
	ADDRA(13 downto 4)   => ADDRA,
        ADDRA(3 downto 0) => ADDRA_GND(3 downto 0),
	ADDRB(13 downto 3)   => ADDRB,
        ADDRB(2 downto 0) => ADDRB_GND(2 downto 0),
	CLKA => CLKA,
	CLKB => CLKB,
	DIA(15 downto 0)  => DIA,
	DIA(31 downto 16) => DIA_GND,
	DIB(7 downto 0)  => DIB,
	DIB(31 downto 8) => DIB_GND,
	DIPA(1 downto 0)  => DIPA,
	DIPA(3 downto 2)  => DIPA_GND,
	DIPB(0 downto 0)  => DIPB,
	DIPB(3 downto 1)  => DIPB_GND,
	ENA => ENA,
	ENB => ENB,
	SSRA => SSRA,
	SSRB => SSRB,
	WEA(0) => WEA(0),
	WEA(1) => WEA(1),
	WEA(2) => WEA(0),
	WEA(3) => WEA(1),
	WEB(0) => WEB,
	WEB(1) => WEB,
	WEB(2) => WEB,
	WEB(3) => WEB,
	DOA(15 downto 0)  => DOA,
	DOA(31 downto 16) => DOA_open,
	DOB(7 downto 0)  => DOB,
	DOB(31 downto 8) => DOB_open,
	DOPA(1 downto 0)  => DOPA,
	DOPA(3 downto 2)  => DOPA_open,
	DOPB(0 downto 0)  => DOPB,
	DOPB(3 downto 1)  => DOPB_open
	);

end RAMB16BWE_S18_S9_V;
