UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Sub-program randomise is outdated and has been replaced by another sub-program.
UVVM:                                                                           Use randomize().
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Setting global seeds to 12, 14
UVVM: ID_UTIL_SETUP                      0.0 ns  TB seq.                        Setting global seeds to 14, 12
UVVM:      
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      ***  REPORT OF GLOBAL CTRL ***
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:                                IGNORE    STOP_LIMIT
UVVM:                NOTE         :  REGARD         0
UVVM:                TB_NOTE      :  REGARD         0
UVVM:                WARNING      :  REGARD         0
UVVM:                TB_WARNING   :  REGARD         0
UVVM:                MANUAL_CHECK :  REGARD         0
UVVM:                ERROR        :  REGARD         1
UVVM:                TB_ERROR     :  REGARD         1
UVVM:                FAILURE      :  REGARD         1
UVVM:                TB_FAILURE   :  REGARD         1
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      
UVVM:      
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      ***  REPORT OF MSG ID PANEL ***
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:                ID                             Status
UVVM:                ------------------------       ------
UVVM:                ID_UTIL_BURIED               : DISABLED
UVVM:                ID_BITVIS_DEBUG              : DISABLED
UVVM:                ID_UTIL_SETUP                : ENABLED
UVVM:                ID_LOG_MSG_CTRL              : ENABLED
UVVM:                ID_ALERT_CTRL                : ENABLED
UVVM:                ID_FINISH_OR_STOP            : ENABLED
UVVM:                ID_CLOCK_GEN                 : ENABLED
UVVM:                ID_GEN_PULSE                 : ENABLED
UVVM:                ID_BLOCKING                  : ENABLED
UVVM:                ID_WATCHDOG                  : ENABLED
UVVM:                ID_POS_ACK                   : ENABLED
UVVM:                ID_LOG_HDR                   : ENABLED
UVVM:                ID_LOG_HDR_LARGE             : ENABLED
UVVM:                ID_LOG_HDR_XL                : ENABLED
UVVM:                ID_SEQUENCER                 : ENABLED
UVVM:                ID_SEQUENCER_SUB             : ENABLED
UVVM:                ID_BFM                       : ENABLED
UVVM:                ID_BFM_WAIT                  : ENABLED
UVVM:                ID_BFM_POLL                  : ENABLED
UVVM:                ID_BFM_POLL_SUMMARY          : ENABLED
UVVM:                ID_CHANNEL_BFM               : ENABLED
UVVM:                ID_TERMINATE_CMD             : ENABLED
UVVM:                ID_SEGMENT_INITIATE          : ENABLED
UVVM:                ID_SEGMENT_COMPLETE          : ENABLED
UVVM:                ID_SEGMENT_HDR               : ENABLED
UVVM:                ID_SEGMENT_DATA              : ENABLED
UVVM:                ID_PACKET_INITIATE           : ENABLED
UVVM:                ID_PACKET_PREAMBLE           : ENABLED
UVVM:                ID_PACKET_COMPLETE           : ENABLED
UVVM:                ID_PACKET_HDR                : ENABLED
UVVM:                ID_PACKET_DATA               : ENABLED
UVVM:                ID_PACKET_CHECKSUM           : ENABLED
UVVM:                ID_PACKET_GAP                : ENABLED
UVVM:                ID_FRAME_INITIATE            : ENABLED
UVVM:                ID_FRAME_COMPLETE            : ENABLED
UVVM:                ID_FRAME_HDR                 : ENABLED
UVVM:                ID_FRAME_DATA                : ENABLED
UVVM:                ID_COVERAGE_MAKEBIN          : DISABLED
UVVM:                ID_COVERAGE_ADDBIN           : DISABLED
UVVM:                ID_COVERAGE_ICOVER           : DISABLED
UVVM:                ID_COVERAGE_CONFIG           : ENABLED
UVVM:                ID_COVERAGE_SUMMARY          : ENABLED
UVVM:                ID_COVERAGE_HOLES            : ENABLED
UVVM:                ID_UVVM_SEND_CMD             : ENABLED
UVVM:                ID_UVVM_CMD_ACK              : ENABLED
UVVM:                ID_UVVM_CMD_RESULT           : ENABLED
UVVM:                ID_CMD_INTERPRETER           : ENABLED
UVVM:                ID_CMD_INTERPRETER_WAIT      : ENABLED
UVVM:                ID_IMMEDIATE_CMD             : ENABLED
UVVM:                ID_IMMEDIATE_CMD_WAIT        : ENABLED
UVVM:                ID_CMD_EXECUTOR              : ENABLED
UVVM:                ID_CMD_EXECUTOR_WAIT         : ENABLED
UVVM:                ID_CHANNEL_EXECUTOR          : ENABLED
UVVM:                ID_CHANNEL_EXECUTOR_WAIT     : ENABLED
UVVM:                ID_NEW_HVVC_CMD_SEQ          : ENABLED
UVVM:                ID_INSERTED_DELAY            : ENABLED
UVVM:                ID_OLD_AWAIT_COMPLETION      : ENABLED
UVVM:                ID_AWAIT_COMPLETION          : ENABLED
UVVM:                ID_AWAIT_COMPLETION_LIST     : ENABLED
UVVM:                ID_AWAIT_COMPLETION_WAIT     : ENABLED
UVVM:                ID_AWAIT_COMPLETION_END      : ENABLED
UVVM:                ID_UVVM_DATA_QUEUE           : ENABLED
UVVM:                ID_CONSTRUCTOR               : ENABLED
UVVM:                ID_CONSTRUCTOR_SUB           : ENABLED
UVVM:                ID_VVC_ACTIVITY              : ENABLED
UVVM:                ID_MONITOR                   : ENABLED
UVVM:                ID_MONITOR_ERROR             : ENABLED
UVVM:                ID_DATA                      : ENABLED
UVVM:                ID_CTRL                      : ENABLED
UVVM:                ID_FILE_OPEN_CLOSE           : ENABLED
UVVM:                ID_FILE_PARSER               : ENABLED
UVVM:                ID_SPEC_COV                  : ENABLED
UVVM:      --------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM:      
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8100000 ps. Watchdog A
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8200000 ps. Watchdog B
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 8300000 ps. Watchdog C
UVVM: ID_WATCHDOG                        0.0 ns  TB seq.                        Starting general watchdog: 100000000 ps. Watchdog D
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         1.0 ns  C_SCOPE                        Verifying check_value() overloads without alert_level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'A must be higher than B, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return true when
UVVM:                                                                           OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"0F"'. 'My msg1, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #1  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"0F". Expected x"0E".
UVVM:                    My msg2, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"25"' (exp: x"2X" (b"10010-")'). 'My msg3a, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"25"'. 'My msg3b, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #2  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"25". Expected x"24".
UVVM:                    My msg3c, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"12"'. 'My msg (none), OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"12"'. 'My msg HEX, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv b"10010"'. 'My msg BIN, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #3  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"32". Expected x"3A".
UVVM:                    My msg (none), Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #4  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"32". Expected x"3A".
UVVM:                    My msg HEX, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #5  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was b"110010". Expected b"111010".
UVVM:                    My msg BIN, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #6  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"32". Expected x"12".
UVVM:                    My msg (none), Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #7  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"12". Expected x"32".
UVVM:                    My msg HEX, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv b"10010"' (exp: b"0010010"'). 'My msg BIN, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv b"0010010"' (exp: b"010010"'). 'My msg BIN, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv b"0000010010"' (exp: b"000010010"'). 'My msg BIN, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"'. 'My msg HEX, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"' (exp: x"01X"'). 'My msg HEX, OK'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        Sub-program check_value is outdated and has been replaced by another sub-program.
UVVM:                                                                           format 'AS_IS' has been deprecated. Use KEEP_LEADING_0.
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv b"0000010010"' (exp: b"000010010"'). 'My msg BIN, AS_IS, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"'. 'My msg HEX, AS_IS, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"' (exp: x"01X"'). 'My msg HEX, AS_IS, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"' (exp: x"0XX"'). 'My msg dontcare-in-extended-width HEX,
UVVM:                                                                           AS_IS, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"' (exp: x"0XX"'). 'My msg dontcare-in-extended-width HEX,
UVVM:                                                                           AS_IS, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #8  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"012". Expected x"0XX".
UVVM:                    My msg dontcare-in-extended-width HEX, AS_IS, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"0XX"'. 'Check MATCH_STD_INCL_Z'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"012"'. 'My msg HEX_BIN_IF_INVALID, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #9  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"01F". Expected x"012".
UVVM:                    My msg HEX_BIN_IF_INVALID, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #10  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. slv  Was x"0XX" (b"00000U00U0"). Expected x"012".
UVVM:                    My msg HEX_BIN_IF_INVALID, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"'. 'Test wide vector, HEX, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for slv x"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF (too wide to be converted to
UVVM:                                                                           integer)"'. 'Test wide vector, DEC, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Boolean check true vs true, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'check_value should return true'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #11  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was true. Expected false. 
UVVM:                    Boolean check true vs false, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'check_value should return false'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #12  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was false. Expected true. 
UVVM:                    Boolean check false vs true, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'check_value should return false'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean false. 'Boolean check false vs false, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'check_value should return true'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'Boolean check true vs true, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #13  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was true. Expected false. 
UVVM:                    Boolean check true vs false, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #14  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was false. Expected true. 
UVVM:                    Boolean check false vs true, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean false. 'Boolean check false vs false, OK'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for unsigned b"01100"'. 'My msg U, BIN, AS_IS, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #15  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. unsigned  Was b"01100". Expected b"11100".
UVVM:                    My msg U, BIN, AS_IS, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #16  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. unsigned  Was b"001100". Expected b"101100".
UVVM:                    My msg U, BIN, AS_IS, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for signed b"10101100"'. 'My msg S, BIN, AS_IS, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #17  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. signed  Was b"10101100". Expected b"10101101".
UVVM:                    My msg S, BIN, AS_IS, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for int 5. 'My msg I, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #18  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. int  Was 5. Expected 12345
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #19  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. int  Was 5. Expected 23456
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for real 5222.01. 'My msg I, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #20  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. real  Was 5222.01. Expected 1421.02
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for std_logic '1' (exp: '1'). 'My msg SL, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return true when
UVVM:                                                                           OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #21  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. std_logic  Was '1'. Expected '0'
UVVM:                    My msg SL, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for std_logic '0' (exp: '-'). 'My msg SL, OK, use default
UVVM:                                                                           match_strictness'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for std_logic '1' (exp: '-'). 'My msg SL, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for std_logic 'L' (exp: '0'). 'My msg SL, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #22  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. std_logic  Was '1'. Expected 'H'
UVVM:                    My msg SL, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #23  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. std_logic  Was '-'. Expected '1'
UVVM:                    My msg SL, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for std_logic 'Z' (exp: 'Z'). 'Check MATCH_STD_INCL_Z'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #24  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. time  Was 15000 ps. Expected 74 ps
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #25  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. time  Was 15000 ps. Expected 14000 ps
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for time 15000 ps. 'My msg I, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for time 15000 ps. 'My msg I, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for time 15000 ps. 'My msg I, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #26  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value() => Failed. time  Was 15000 ps. Expected 74 ps
UVVM:                    My msg I, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 12. 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 8. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_warnings_or_worse correctly updated'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for int 0. 'Check
UVVM:                                                                           shared_uvvm_status.found_unexpected_simulation_errors_or_worse correctly updated'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 3. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #27  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. slv  Was x"32". Expected x"2".
UVVM:                    Check padding of different check_value SLV lengths (actual>expected)
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #28  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. slv  Was x"A". Expected x"32".
UVVM:                    Check padding of different check_value SLV lengths (actual<expected)
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #29  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. slv  Was x"0A". Expected x"32".
UVVM:                    Check padding of different check_value SLV lengths (actual=expected)
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_slv_array x"A"'. 'check_value with t_slv_array of different array
UVVM:                                                                           indexes'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_slv_array x"B"'. 'check_value with t_slv_array of different array
UVVM:                                                                           indexes'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_signed_array x"C"'. 'check_value with t_signed_array of different
UVVM:                                                                           array indexes'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_signed_array x"D"'. 'check_value with t_signed_array of different
UVVM:                                                                           array indexes'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_unsigned_array x"E"'. 'check_value with t_unsigned_array of
UVVM:                                                                           different array indexes'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_unsigned_array x"F"'. 'check_value with t_unsigned_array of
UVVM:                                                                           different array indexes'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 3. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_slv_array x"A"'. 'check_value with t_slv_array of different array
UVVM:                                                                           indexes'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #30  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. t_slv_array  Was x"B". Expected x"C".
UVVM:                    check_value with t_slv_array of different array indexes
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_signed_array x"C"'. 'check_value with t_signed_array of different
UVVM:                                                                           array indexes'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #31  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. t_signed_array  Was x"D". Expected x"A".
UVVM:                    check_value with t_signed_array of different array indexes
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for t_unsigned_array x"E"'. 'check_value with t_unsigned_array of
UVVM:                                                                           different array indexes'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #32  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. t_unsigned_array  Was x"F". Expected x"D".
UVVM:                    check_value with t_unsigned_array of different array indexes
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array directions do not match'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  TB_ERROR #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was false. 'array lengths do not match'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected TB_WARNINGs by 1. 
UVVM: 
UVVM: ***  TB_WARNING #1  ***
UVVM:             1 ns   TB seq.
UVVM:                    check_value() => Failed. Boolean was false. 'array directions do not match'
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq.                        check_value() => OK, for boolean true. 'array lengths do not match'
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         1.0 ns  C_SCOPE                        Verifying check_value_in_range() overloads without alert_level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for integer 3. 'Check_value_in_range, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for integer 3. 'Check_value_in_range, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return true when
UVVM:                                                                           OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #33  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value_in_range() => Failed. integer  Was 3. Expected between 4 and 5
UVVM:                    Check_value_in_range, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for unsigned 10000000000000000000000000000000. 'Check 2147483648
UVVM:                                                                           between 1 and 2147483649, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #34  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value_in_range() => Failed. unsigned  Was 10000000000000000000000000000000. Expected between 00000000000000000000000000000001 and
UVVM:                    01111111111111111111111111111111
UVVM:                    Check 2147483648 between 1 and 2147483647, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #35  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value_in_range() => Failed. unsigned  Was 10000000000000000000000000000000. Expected between 00000000000000000000000000000001 and
UVVM:                    01111111111111111111111111111111
UVVM:                    Check 2147483648 between 1 and 2147483647, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for signed 10000000000000000000000000000001. 'Check -2147483647
UVVM:                                                                           between -2147483648 and 1, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #36  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value_in_range() => Failed. signed  Was 10000000000000000000000000000001. Expected between 10000000000000000000000000000010 and
UVVM:                    00000000000000000000000000000001
UVVM:                    Check -2147483647 between -2147483646 and 1, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for time 3000 ps. 'Check time in range, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value_in_range() => OK, for time 3000 ps. 'Check time in range, OK'
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return true when
UVVM:                                                                           OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #37  ***
UVVM:             1 ns   TB seq
UVVM:                    check_value_in_range() => Failed. time  Was 3000 ps. Expected between 4000 ps and 5000 ps
UVVM:                    Check time in range, Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                         1.0 ns  TB seq                         check_value() => OK, for boolean true. 'check_value with return value shall return false when
UVVM:                                                                           Fail'
UVVM: ID_UTIL_SETUP                      1.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                         1.0 ns  TB seq                         Verifying check_stable overloads without alert level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK. Stable at true. 'Stable boolean OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK. Stable at xFF. 'Stable slv OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK. Stable at xFF. 'Stable unsigned OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK. Stable at xFF. 'Stable signed OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK.14 stable at 14. 'Stable integer OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK.1337.14 stable at 1337.14. 'Stable real OK'
UVVM: ID_POS_ACK                        11.0 ns  TB seq                         check_stable() => OK. Stable at 1. 'Stable std_logic OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #38  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from false to true 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable boolean Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #39  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from x00 to xFF 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable slv Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #40  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from x00 to xFF 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable unsigned Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #41  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from x00 to xFF 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable signed Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #42  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from 0 to 14 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable integer Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #43  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from 0 to 1337.14 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable real Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #44  ***
UVVM:            11 ns   TB seq
UVVM:                    check_stable() => Failed. Switched from 0 to 1 10 ns ago. Expected stable for 11000 ps
UVVM:                    Stable std_logic Fail
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                        31.0 ns  TB seq                         check_stable() => OK. Stable at xCC. 'Stable slv OK'
UVVM: ID_POS_ACK                        51.0 ns  TB seq                         check_stable() => OK. Stable at xCC. 'Stable slv OK'
UVVM: ID_UTIL_SETUP                     51.0 ns  TB seq.                        incremented expected ERRORs by 7. 
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                        51.0 ns  TB seq.                        Verifying await_change overloads without alert_level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #45  ***
UVVM:            53 ns   TB seq
UVVM:                    await_change(boolean, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                        56.0 ns  TB seq                         await_change(boolean, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window 1, OK'
UVVM: ID_POS_ACK                        60.0 ns  TB seq                         await_change(boolean, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window 2, OK'
UVVM: ID_POS_ACK                        65.0 ns  TB seq                         await_change(boolean, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window 3, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #46  ***
UVVM:            70 ns   TB seq
UVVM:                    await_change(boolean, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                     70.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #47  ***
UVVM:            72 ns   TB seq
UVVM:                    await_change(std_logic, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                        75.0 ns  TB seq                         await_change(std_logic, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                        79.0 ns  TB seq                         await_change(std_logic, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                        84.0 ns  TB seq                         await_change(std_logic, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #48  ***
UVVM:            89 ns   TB seq
UVVM:                    await_change(std_logic, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                     89.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #49  ***
UVVM:            91 ns   TB seq
UVVM:                    await_change(slv, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                        94.0 ns  TB seq                         await_change(slv, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time window
UVVM:                                                                           1, OK'
UVVM: ID_POS_ACK                        98.0 ns  TB seq                         await_change(slv, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time window
UVVM:                                                                           2, OK'
UVVM: ID_POS_ACK                       103.0 ns  TB seq                         await_change(slv, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time window
UVVM:                                                                           3, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #50  ***
UVVM:           108 ns   TB seq
UVVM:                    await_change(slv, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    108.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #51  ***
UVVM:           110 ns   TB seq
UVVM:                    await_change(unsigned, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       113.0 ns  TB seq                         await_change(unsigned, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       117.0 ns  TB seq                         await_change(unsigned, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       122.0 ns  TB seq                         await_change(unsigned, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #52  ***
UVVM:           127 ns   TB seq
UVVM:                    await_change(unsigned, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    127.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #53  ***
UVVM:           129 ns   TB seq
UVVM:                    await_change(signed, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       132.0 ns  TB seq                         await_change(signed, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       136.0 ns  TB seq                         await_change(signed, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       141.0 ns  TB seq                         await_change(signed, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #54  ***
UVVM:           146 ns   TB seq
UVVM:                    await_change(signed, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    146.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #55  ***
UVVM:           148 ns   TB seq
UVVM:                    await_change(integer, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       151.0 ns  TB seq                         await_change(integer, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       155.0 ns  TB seq                         await_change(integer, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       160.0 ns  TB seq                         await_change(integer, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #56  ***
UVVM:           165 ns   TB seq
UVVM:                    await_change(integer, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    165.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #57  ***
UVVM:           167 ns   TB seq
UVVM:                    await_change(real, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       170.0 ns  TB seq                         await_change(real, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       174.0 ns  TB seq                         await_change(real, 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: ID_POS_ACK                       179.0 ns  TB seq                         await_change(real, 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #58  ***
UVVM:           184 ns   TB seq
UVVM:                    await_change(real, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    184.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                       184.0 ns  TB seq.                        Verifying await_value overloads without alert_level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #59  ***
UVVM:           186 ns   TB seq
UVVM:                    await_value(slv x"1", 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       199.0 ns  TB seq                         await_value(slv x"2", 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window 1, OK'
UVVM: ID_POS_ACK                       203.0 ns  TB seq                         await_value(slv x"3", 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window 2, leading zero, OK'
UVVM: ID_POS_ACK                       208.0 ns  TB seq                         await_value(slv x"4", 3 ns, 5 ns) => OK. Condition occurred after 5 ns. 'Change within time
UVVM:                                                                           window 3, leading zero, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #60  ***
UVVM:           213 ns   TB seq
UVVM:                    await_value(slv x"5", 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       217.0 ns  TB seq                         await_value(slv x"8", 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #61  ***
UVVM:           217 ns   TB seq
UVVM:                    await_value(slv x"113", 3 ns, 5 ns) => Failed. Widths did not match. 'Different width, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       217.0 ns  TB seq                         await_value(slv x"9", 0 ns, 1 ns) => OK. Condition occurred after 0 ns. 'Changed immediately,
UVVM:                                                                           OK'
UVVM: ID_POS_ACK                       227.0 ns  TB seq                         await_value(slv b"1111", 0 ns, 0 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. Log in BIN'
UVVM: ID_POS_ACK                       227.0 ns  TB seq                         await_value(slv x"F", 0 ns, 1 ns) => OK. Condition occurred after 0 ns. 'Val=exp already, No
UVVM:                                                                           signal'event. OK. Log in HEX'
UVVM: ID_POS_ACK                       227.0 ns  TB seq                         await_value(slv d"15", 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Val=exp already, No
UVVM:                                                                           signal'event. OK. Log in DECimal'
UVVM: ID_POS_ACK                       228.0 ns  TB seq                         await_value(slv x"80", 0 ns, 0 ns) => OK. Condition occurred after 0 ns. 'Val=exp already, No
UVVM:                                                                           signal'event. OK. '
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #62  ***
UVVM:           228 ns   TB seq
UVVM:                    await_value(slv x"80", 1 ns, 2 ns) => Failed. Condition occurred too early, after 0 ns. 'Val=exp already, min_time>0ns, Fail. '
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       232.0 ns  TB seq                         await_value(slv x"3", 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change within time
UVVM:                                                                           window 2, exact match, OK'
UVVM: ID_POS_ACK                       246.0 ns  TB seq                         await_value(slv x"X1" (b"10--0001"), 3 ns, 5 ns) => OK. Condition occurred after 4 ns. 'Change
UVVM:                                                                           within time window 2, STD match, OK'
UVVM: ID_UTIL_SETUP                    246.0 ns  TB seq.                        incremented expected ERRORs by 4. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #63  ***
UVVM:           248 ns   TB seq
UVVM:                    await_value(unsigned x"1", 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       251.0 ns  TB seq                         await_value(unsigned x"2", 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within
UVVM:                                                                           time window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #64  ***
UVVM:           256 ns   TB seq
UVVM:                    await_value(unsigned x"5", 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       266.0 ns  TB seq                         await_value(unsigned b"1111", 0 ns, 0 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. Log in BIN'
UVVM: ID_POS_ACK                       266.0 ns  TB seq                         await_value(unsigned x"F", 0 ns, 0 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. Log in HEX'
UVVM: ID_POS_ACK                       266.0 ns  TB seq                         await_value(unsigned d"15", 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. Log in DECimal'
UVVM: ID_UTIL_SETUP                    266.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #65  ***
UVVM:           268 ns   TB seq
UVVM:                    await_value(signed x"1", 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       271.0 ns  TB seq                         await_value(signed x"2", 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #66  ***
UVVM:           276 ns   TB seq
UVVM:                    await_value(signed x"5", 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       286.0 ns  TB seq                         await_value(signed d"15", 0 ns, 1 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. Log in DECimal'
UVVM: ID_UTIL_SETUP                    286.0 ns  TB seq.                        incremented expected ERRORs by 2. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #67  ***
UVVM:           286 ns   TB seq
UVVM:                    await_value(boolean true, 3 ns, 5 ns) => Failed. Condition occurred too early, after 0 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       299.0 ns  TB seq                         await_value(boolean false, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within
UVVM:                                                                           time window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #68  ***
UVVM:           304 ns   TB seq
UVVM:                    await_value(boolean true, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       314.0 ns  TB seq                         await_value(boolean false, 0 ns, 1 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. '
UVVM: ID_POS_ACK                       314.0 ns  TB seq                         await_value(boolean true, 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Val=exp already,
UVVM:                                                                           No signal'event. OK. '
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #69  ***
UVVM:           314 ns   TB seq
UVVM:                    await_value(boolean true, 1 ns, 2 ns) => Failed. Condition occurred too early, after 0 ns. 'Val=exp already, min_time>0ns, Fail. '
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    314.0 ns  TB seq.                        incremented expected ERRORs by 3. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #70  ***
UVVM:           314 ns   TB seq
UVVM:                    await_value(std_logic 1, 3 ns, 5 ns) => Failed. Condition occurred too early, after 0 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       327.0 ns  TB seq                         await_value(std_logic 0, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #71  ***
UVVM:           332 ns   TB seq
UVVM:                    await_value(std_logic 1, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       342.0 ns  TB seq                         await_value(std_logic 0, 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Changed
UVVM:                                                                           immediately, OK. '
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #72  ***
UVVM:           352 ns   TB seq
UVVM:                    await_value(std_logic 1, 1 ns, 2 ns) => Failed. Condition occurred too early, after 0 ns. 'Val=exp already, min_time>0ns, Fail. '
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       365.0 ns  TB seq                         await_value(std_logic 0, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window to weak, expecting forced, OK'
UVVM: ID_POS_ACK                       378.0 ns  TB seq                         await_value(std_logic H, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window to forced, expecting weak, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #73  ***
UVVM:           393 ns   TB seq
UVVM:                    await_value(std_logic L, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change within time window to forced, expecting weak, FAIL'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #74  ***
UVVM:           408 ns   TB seq
UVVM:                    await_value(std_logic 1, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change within time window to weak, expecting forced, FAIL'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    418.0 ns  TB seq.                        incremented expected ERRORs by 5. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #75  ***
UVVM:           420 ns   TB seq
UVVM:                    await_value(integer 1, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       423.0 ns  TB seq                         await_value(integer 2, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #76  ***
UVVM:           428 ns   TB seq
UVVM:                    await_value(integer 3, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       438.0 ns  TB seq                         await_value(integer 15, 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Val=exp already, no
UVVM:                                                                           signal'event, OK. '
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #77  ***
UVVM:           448 ns   TB seq
UVVM:                    await_value(integer 17, 1 ns, 2 ns) => Failed. Condition occurred too early, after 0 ns. 'Val=exp already, Min_time>0ns, Fail. '
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    448.0 ns  TB seq.                        incremented expected ERRORs by 3. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #78  ***
UVVM:           450 ns   TB seq
UVVM:                    await_value(real 1, 3 ns, 5 ns) => Failed. Condition occurred too early, after 2 ns. 'Change too soon, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       453.0 ns  TB seq                         await_value(real 2, 3 ns, 5 ns) => OK. Condition occurred after 3 ns. 'Change within time
UVVM:                                                                           window, OK'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #79  ***
UVVM:           458 ns   TB seq
UVVM:                    await_value(real 3, 3 ns, 5 ns) => Failed. Timed out after 5 ns. 'Change too late, Fail'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_POS_ACK                       468.0 ns  TB seq                         await_value(real 15, 0 ns, 2 ns) => OK. Condition occurred after 0 ns. 'Val=exp already, no
UVVM:                                                                           signal'event, OK. '
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #80  ***
UVVM:           478 ns   TB seq
UVVM:                    await_value(real 17, 1 ns, 2 ns) => Failed. Condition occurred too early, after 0 ns. 'Val=exp already, Min_time>0ns, Fail. '
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    478.0 ns  TB seq.                        incremented expected ERRORs by 3. 
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                       478.0 ns  TB seq.                        Verifying await_stable overloads without alert_level
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
UVVM: ID_POS_ACK                       528.0 ns  TB seq                         await_stable(boolean, 50 ns, 51 ns) => OK. Condition occurred after 50 ns. 'bol: No 'event,
UVVM:                                                                           Stable FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                       608.0 ns  TB seq                         await_stable(boolean, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'bol: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #81  ***
UVVM:           638 ns   TB seq
UVVM:                    await_stable(boolean, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last event
UVVM:                    = 0 ns. 'bol: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    638.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #82  ***
UVVM:           638 ns   TB seq
UVVM:                    await_stable(boolean, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'bol: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    638.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                       638.0 ns  TB seq                         await_stable(boolean, 0 ns, 0 ns) => OK. Condition occurred immediately. 'bol: stable for 0 ns,
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                       688.0 ns  TB seq                         await_stable(boolean, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'bol: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                       738.0 ns  TB seq                         await_stable(boolean, 50 ns, 100 ns) => OK. Condition occurred immediately. 'bol: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                       758.0 ns  TB seq                         await_stable(boolean, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'bol: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #83  ***
UVVM:           778 ns   TB seq
UVVM:                    await_stable(boolean, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last event
UVVM:                    = 0 ns. 'bol: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    778.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #84  ***
UVVM:           878 ns   TB seq
UVVM:                    await_stable(boolean, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'bol: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                    878.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1028.0 ns  TB seq                         await_stable(boolean, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'bol: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      1078.0 ns  TB seq                         await_stable(boolean, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'bol: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      1128.0 ns  TB seq                         await_stable(boolean, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'bol: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #85  ***
UVVM:          1138 ns   TB seq
UVVM:                    await_stable(boolean, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'bol: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1138.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1188.0 ns  TB seq                         await_stable(std_logic, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 'sl: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      1268.0 ns  TB seq                         await_stable(std_logic, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'sl: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #86  ***
UVVM:          1298 ns   TB seq
UVVM:                    await_stable(std_logic, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last
UVVM:                    event = 0 ns. 'sl: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1298.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #87  ***
UVVM:          1298 ns   TB seq
UVVM:                    await_stable(std_logic, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'sl: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1298.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1298.0 ns  TB seq                         await_stable(std_logic, 0 ns, 0 ns) => OK. Condition occurred immediately. 'sl: stable for 0
UVVM:                                                                           ns, FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      1348.0 ns  TB seq                         await_stable(std_logic, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'sl: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      1398.0 ns  TB seq                         await_stable(std_logic, 50 ns, 100 ns) => OK. Condition occurred immediately. 'sl: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                      1418.0 ns  TB seq                         await_stable(std_logic, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'sl: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #88  ***
UVVM:          1438 ns   TB seq
UVVM:                    await_stable(std_logic, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last
UVVM:                    event = 0 ns. 'sl: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1438.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #89  ***
UVVM:          1538 ns   TB seq
UVVM:                    await_stable(std_logic, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'sl: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1538.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1688.0 ns  TB seq                         await_stable(std_logic, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'sl: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      1738.0 ns  TB seq                         await_stable(std_logic, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'sl: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      1788.0 ns  TB seq                         await_stable(std_logic, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'sl: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #90  ***
UVVM:          1798 ns   TB seq
UVVM:                    await_stable(std_logic, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'sl: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1798.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1848.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 'slv8:
UVVM:                                                                           Stable FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      1928.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'slv8:
UVVM:                                                                           Stable FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #91  ***
UVVM:          1958 ns   TB seq
UVVM:                    await_stable(std_logic_vector, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since
UVVM:                    last event = 0 ns. 'slv8: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1958.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #92  ***
UVVM:          1958 ns   TB seq
UVVM:                    await_stable(std_logic_vector, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'slv8: Timeout
UVVM:                    before stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   1958.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      1958.0 ns  TB seq                         await_stable(std_logic_vector, 0 ns, 0 ns) => OK. Condition occurred immediately. 'slv8: stable
UVVM:                                                                           for 0 ns, FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      2008.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'slv8:
UVVM:                                                                           Stable FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      2058.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 100 ns) => OK. Condition occurred immediately. 'slv8:
UVVM:                                                                           Stable FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta
UVVM:                                                                           cycle)'
UVVM: ID_POS_ACK                      2078.0 ns  TB seq                         await_stable(std_logic_vector, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'slv8:
UVVM:                                                                           Stable FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #93  ***
UVVM:          2098 ns   TB seq
UVVM:                    await_stable(std_logic_vector, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since
UVVM:                    last event = 0 ns. 'slv8: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2098.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #94  ***
UVVM:          2198 ns   TB seq
UVVM:                    await_stable(std_logic_vector, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'slv8:
UVVM:                    FROM_NOW, FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2198.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      2348.0 ns  TB seq                         await_stable(std_logic_vector, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'slv8:
UVVM:                                                                           FROM_NOW, FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      2398.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'slv8:
UVVM:                                                                           Stable FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      2448.0 ns  TB seq                         await_stable(std_logic_vector, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'slv8:
UVVM:                                                                           Stable FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #95  ***
UVVM:          2458 ns   TB seq
UVVM:                    await_stable(std_logic_vector, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'slv8:
UVVM:                    Stable FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2458.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      2508.0 ns  TB seq                         await_stable(unsigned, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 'u8: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      2588.0 ns  TB seq                         await_stable(unsigned, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'u8: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #96  ***
UVVM:          2618 ns   TB seq
UVVM:                    await_stable(unsigned, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last
UVVM:                    event = 0 ns. 'u8: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2618.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #97  ***
UVVM:          2618 ns   TB seq
UVVM:                    await_stable(unsigned, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'u8: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2618.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      2618.0 ns  TB seq                         await_stable(unsigned, 0 ns, 0 ns) => OK. Condition occurred immediately. 'u8: stable for 0 ns,
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      2668.0 ns  TB seq                         await_stable(unsigned, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'u8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      2718.0 ns  TB seq                         await_stable(unsigned, 50 ns, 100 ns) => OK. Condition occurred immediately. 'u8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                      2738.0 ns  TB seq                         await_stable(unsigned, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'u8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #98  ***
UVVM:          2758 ns   TB seq
UVVM:                    await_stable(unsigned, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last
UVVM:                    event = 0 ns. 'u8: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2758.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #99  ***
UVVM:          2858 ns   TB seq
UVVM:                    await_stable(unsigned, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'u8: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   2858.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3008.0 ns  TB seq                         await_stable(unsigned, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'u8: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      3058.0 ns  TB seq                         await_stable(unsigned, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'u8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      3108.0 ns  TB seq                         await_stable(unsigned, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'u8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #100  ***
UVVM:          3118 ns   TB seq
UVVM:                    await_stable(unsigned, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'u8: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3118.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3168.0 ns  TB seq                         await_stable(signed, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 's8: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      3248.0 ns  TB seq                         await_stable(signed, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 's8: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #101  ***
UVVM:          3278 ns   TB seq
UVVM:                    await_stable(signed, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last event
UVVM:                    = 0 ns. 's8: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3278.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #102  ***
UVVM:          3278 ns   TB seq
UVVM:                    await_stable(signed, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 's8: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3278.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3278.0 ns  TB seq                         await_stable(signed, 0 ns, 0 ns) => OK. Condition occurred immediately. 's8: stable for 0 ns,
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      3328.0 ns  TB seq                         await_stable(signed, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 's8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      3378.0 ns  TB seq                         await_stable(signed, 50 ns, 100 ns) => OK. Condition occurred immediately. 's8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                      3398.0 ns  TB seq                         await_stable(signed, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 's8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #103  ***
UVVM:          3418 ns   TB seq
UVVM:                    await_stable(signed, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last event
UVVM:                    = 0 ns. 's8: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3418.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #104  ***
UVVM:          3518 ns   TB seq
UVVM:                    await_stable(signed, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 's8: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3518.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3668.0 ns  TB seq                         await_stable(signed, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 's8: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      3718.0 ns  TB seq                         await_stable(signed, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 's8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      3768.0 ns  TB seq                         await_stable(signed, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 's8: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #105  ***
UVVM:          3778 ns   TB seq
UVVM:                    await_stable(signed, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 's8: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3778.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3828.0 ns  TB seq                         await_stable(integer, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 'i: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      3908.0 ns  TB seq                         await_stable(integer, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'i: Stable
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #106  ***
UVVM:          3938 ns   TB seq
UVVM:                    await_stable(integer, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last event
UVVM:                    = 0 ns. 'i: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3938.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #107  ***
UVVM:          3938 ns   TB seq
UVVM:                    await_stable(integer, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'i: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   3938.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      3938.0 ns  TB seq                         await_stable(integer, 0 ns, 0 ns) => OK. Condition occurred immediately. 'i: stable for 0 ns,
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      3988.0 ns  TB seq                         await_stable(integer, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'i: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      4038.0 ns  TB seq                         await_stable(integer, 50 ns, 100 ns) => OK. Condition occurred immediately. 'i: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                      4058.0 ns  TB seq                         await_stable(integer, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'i: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #108  ***
UVVM:          4078 ns   TB seq
UVVM:                    await_stable(integer, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last event
UVVM:                    = 0 ns. 'i: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4078.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #109  ***
UVVM:          4178 ns   TB seq
UVVM:                    await_stable(integer, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'i: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4178.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      4328.0 ns  TB seq                         await_stable(integer, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'i: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      4378.0 ns  TB seq                         await_stable(integer, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'i: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      4428.0 ns  TB seq                         await_stable(integer, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'i: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #110  ***
UVVM:          4438 ns   TB seq
UVVM:                    await_stable(integer, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'i: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4438.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      4488.0 ns  TB seq                         await_stable(real, 50 ns, 100 ns) => OK. Condition occurred after 50 ns. 'r: Stable FROM_NOW,
UVVM:                                                                           FROM_NOW, OK after 50 ns'
UVVM: ID_POS_ACK                      4568.0 ns  TB seq                         await_stable(real, 50 ns, 100 ns) => OK. Condition occurred after 80 ns. 'r: Stable FROM_NOW,
UVVM:                                                                           FROM_NOW, OK after 80 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #111  ***
UVVM:          4598 ns   TB seq
UVVM:                    await_stable(real, 50 ns, 60 ns) => Failed. After 30 ns, stable for stable_req = 50 ns is not possible before timeout = 60 ns(time since last event =
UVVM:                    0 ns. 'r: Not stable FROM_NOW, FROM_NOW, Fail after 30 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4598.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #112  ***
UVVM:          4598 ns   TB seq
UVVM:                    await_stable(real, 50 ns, 1 ns) => Failed immediately: Stable for stable_req = 50 ns is not possible before timeout = 1 ns. 'r: Timeout before
UVVM:                    stable_req, FROM_NOW, FROM_NOW, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4598.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      4598.0 ns  TB seq                         await_stable(real, 0 ns, 0 ns) => OK. Condition occurred immediately. 'r: stable for 0 ns,
UVVM:                                                                           FROM_NOW, FROM_NOW, OK after 0 ns'
UVVM: ID_POS_ACK                      4648.0 ns  TB seq                         await_stable(real, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'r: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 40 ns'
UVVM: ID_POS_ACK                      4698.0 ns  TB seq                         await_stable(real, 50 ns, 100 ns) => OK. Condition occurred immediately. 'r: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK immediately (even though an event occurrs the next delta cycle)'
UVVM: ID_POS_ACK                      4718.0 ns  TB seq                         await_stable(real, 20 ns, 11 ns) => OK. Condition occurred after 9 ns. 'r: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_NOW, OK after 9 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #113  ***
UVVM:          4738 ns   TB seq
UVVM:                    await_stable(real, 21 ns, 20 ns) => Failed. After 10 ns, stable for stable_req = 21 ns is not possible before timeout = 20 ns(time since last event =
UVVM:                    0 ns. 'r: Not stable FROM_LAST_EVENT, FROM_NOW, Fail after 10 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4738.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #114  ***
UVVM:          4838 ns   TB seq
UVVM:                    await_stable(real, 40 ns, 100 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 0 ns. 'r: FROM_NOW,
UVVM:                    FROM_LAST_EVENT, Fail immediately'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   4838.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM: ID_POS_ACK                      4988.0 ns  TB seq                         await_stable(real, 40 ns, 150 ns) => OK. Condition occurred after 50 ns. 'r: FROM_NOW,
UVVM:                                                                           FROM_LAST_EVENT, OK after 50 ns'
UVVM: ID_POS_ACK                      5038.0 ns  TB seq                         await_stable(real, 50 ns, 100 ns) => OK. Condition occurred after 40 ns. 'r: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: ID_POS_ACK                      5088.0 ns  TB seq                         await_stable(real, 50 ns, 50 ns) => OK. Condition occurred after 40 ns. 'r: Stable
UVVM:                                                                           FROM_LAST_EVENT, FROM_LAST_EVENT, OK after 40 ns'
UVVM: 
UVVM: =========================================================================================================================================================================
UVVM: ***  ERROR #115  ***
UVVM:          5098 ns   TB seq
UVVM:                    await_stable(real, 50 ns, 49 ns) => Failed immediately: Stable for stable_req = 40 ns is not possible before timeout = 39 ns. 'r: Stable
UVVM:                    FROM_LAST_EVENT, FROM_LAST_EVENT, FAIL after 39 ns'
UVVM: =========================================================================================================================================================================
UVVM: 
UVVM: 
UVVM: ID_UTIL_SETUP                   5098.0 ns  TB seq.                        incremented expected ERRORs by 1. 
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** INTERMEDIATE SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      0         0         0         ok
UVVM:                TB_NOTE      :      0         0         0         ok
UVVM:                WARNING      :      0         0         0         ok
UVVM:                TB_WARNING   :      1         1         0         ok
UVVM:                MANUAL_CHECK :      0         0         0         ok
UVVM:                ERROR        :    115       115         0         ok
UVVM:                TB_ERROR     :      1         1         0         ok
UVVM:                FAILURE      :      0         0         0         ok
UVVM:                TB_FAILURE   :      0         0         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM:      ====================================================================================================================================================================
UVVM:      *** FINAL SUMMARY OF ALL ALERTS ***
UVVM:      ====================================================================================================================================================================
UVVM:                                REGARDED   EXPECTED  IGNORED      Comment?
UVVM:                NOTE         :      0         0         0         ok
UVVM:                TB_NOTE      :      0         0         0         ok
UVVM:                WARNING      :      0         0         0         ok
UVVM:                TB_WARNING   :      1         1         0         ok
UVVM:                MANUAL_CHECK :      0         0         0         ok
UVVM:                ERROR        :    115       115         0         ok
UVVM:                TB_ERROR     :      1         1         0         ok
UVVM:                FAILURE      :      0         0         0         ok
UVVM:                TB_FAILURE   :      0         0         0         ok
UVVM:      ====================================================================================================================================================================
UVVM:      >> Simulation SUCCESS: No mismatch between counted and expected serious alerts
UVVM:      ====================================================================================================================================================================
UVVM:      
UVVM:      
UVVM: 
UVVM: 
UVVM: ID_LOG_HDR                      6098.0 ns  TB seq                         SIMULATION COMPLETED
UVVM: -------------------------------------------------------------------------------------------------------------------------------------------------------------------------
